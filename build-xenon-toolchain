TARGET=xenon
PREFIX=/usr/local/xenon

BINUTILS=binutils-2.35
GCC=gcc-10.2.0
NEWLIB=newlib-3.2.0

LOGFILE="./xenon_build.log"

export DEVKITXENON=$PREFIX
export PATH=/usr/local/opt/gnu-sed/libexec/gnubin:$PREFIX/bin:$PATH

function download
{
	# Make working directory
	echo -e "Creating final xenon toolchain directory: $PREFIX"
	if [ ! -d $PREFIX ]; then
		mkdir $PREFIX
	fi;

	# Check if binutils sources are available, download it if needed
	if [ ! -f "$BINUTILS.tar.bz2" ]; then
		echo -e "Downloading $BINUTILS.tar.bz2"
		wget -c http://ftp.gnu.org/gnu/binutils/$BINUTILS.tar.bz2 || exit 0
	fi;

	# Check if gcc sources are available, download it if needed
	if [ ! -f "$GCC.tar.bz2" ]; then
		echo -e "Downloading $GCC.tar.bz2"
		wget -c ftp://ftp.gnu.org/gnu/gcc/$GCC/$GCC.tar.xz || exit 0
	fi;

	# Check if newlib sources are available, download it if needed
	if [ ! -f "$NEWLIB.tar.gz" ]; then
		echo -e "Downloading $NEWLIB.tar.gz"
		wget -c ftp://sourceware.org/pub/newlib/$NEWLIB.tar.gz || exit 0
	fi;
}

function extract_binutils
{
	echo -e "Extraindo binutils..."
	tar -jxvf $BINUTILS.tar.bz2 >> $LOGFILE 2>&1 || exit 0
	echo -e "Binutils extraido!"

	echo -e "Aplicando patch binutils..."
	cat binutils.diff | patch -p0 >> $LOGFILE 2>&1 || exit 0
	echo -e "Binutils patch aplicado!"
}

function build_binutils
{
	mkdir build
	cd build

	echo -e "Configurando binutils..."
	../$BINUTILS/configure --target=$TARGET --prefix=$PREFIX --enable-multilib --disable-nls --disable-werror >> $LOGFILE 2>&1 || exit 0
	echo -e "Binutils configurado!"

	echo -e "Construindo binutils..."
	make >> $LOGFILE 2>&1 || exit 0
	make install >> $LOGFILE 2>&1 || exit 0
	echo -e "Binutils instalado!"

	cd ..
	rm -rf build/*
}

function extract_gcc
{
	echo -e "Extraindo GCC..."
	tar -Jxxvf $GCC.tar.xz >> $LOGFILE 2>&1 || exit 0
	echo -e "GCC extraido!"

	echo -e "Aplicando patch GCC..."
	cat gcc.diff | patch -p0 >> $LOGFILE 2>&1 || exit 0
	echo -e "GCC patch aplicado!"
}

function build_gcc_1
{
	cd build

    echo -e "Configurando GCC 1/2..."
    ../$GCC/configure --target=$TARGET --prefix=$PREFIX --with-cpu=cell -enable-interwork --enable-languages="c" --without-headers --disable-shared --with-newlib --disable-libmudflap --disable-libssp --disable-nls --disable-shared --disable-decimal-float --enable-altivec >> $LOGFILE 2>&1 || exit 0
	echo -e "GCC 1/2 configurado!"

    echo -e "Construindo GCC 1/2..."
    make all-gcc >> $LOGFILE 2>&1 || exit 0
    make install-gcc >> $LOGFILE 2>&1 || exit 0
	echo -e "GCC 1/2 instalado!"

    cd ..
    rm -rf build/*
}

function extract_newlib
{
	echo -e "Extraindo Newlib..."
	tar -vzxf $NEWLIB.tar.gz >> $LOGFILE 2>&1 || exit 0
	echo -e "Newlib extraido!"

	echo -e "Patcheando Newlib..."
	cat newlib.diff | patch -p0 >> $LOGFILE 2>&1 || exit 0
	echo -e "Newlib patcheado!"
}

function build_newlib
{
	cd build

    echo -e "Configurando Newlib..."
    ../$NEWLIB/configure --target=$TARGET --prefix=$PREFIX --enable-multilib --disable-nls CFLAGS="-DHAVE_BLKSIZE -O2" --enable-newlib-io-long-long --enable-newlib-io-long-double >> $LOGFILE 2>&1 || exit 0
	echo -e "Newlib Configurado!"

    echo -e "Construindo Newlib..."
    make  >> $LOGFILE 2>&1 || exit 0
    make install >> $LOGFILE 2>&1 || exit 0
	echo -e "Newlib instalado!"
 
    cd ..
}

function build_gcc_2
{
	cd build

    echo -e "Configurando GCC 2/2..."
    ../$GCC/configure --target=$TARGET --prefix=$PREFIX --with-cpu=cell --disable-decimal-float --disable-libquadmath --enable-languages=c,c++ --disable-libssp --with-newlib --enable-cxx-flags="-G0" --disable-libmudflap --disable-nls --disable-shared --disable-linux-futex --enable-altivec --disable-threads --disable-libgomp --disable-libitm --disable-libsanitizer --disable-libatomic --enable-libstdcxx-time=no >> $LOGFILE 2>&1 || exit 0
	echo -e "GCC 2/2 configurado!"

    echo -e "Construindo GCC 2/2..."
    make >> $LOGFILE 2>&1 || exit 0
    make install >> $LOGFILE 2>&1 || exit 0
	echo -e "GCC 2/2 instalado!"

    cd ..
    rm -rf build/*
}


download
extract_binutils
build_binutils
extract_gcc
build_gcc_1
extract_newlib
build_newlib
build_gcc_2
